# week 6 task 6
# coursera https://www.coursera.org/learn/python
# -osnovy-programmirovaniya/programming/Hs8PB/grazhdanskaia-oborona
"""
текст задания                                                 тут 79 символ=>!
Штаб гражданской обороны Тридесятой области решил обновить план спасения на
случай ядерной атаки. Известно, что все n селений Тридесятой области находятся
вдоль одной прямой дороги. Вдоль дороги также расположены m бомбоубежищ, в
которых жители селений могут укрыться на случай ядерной атаки.
Чтобы спасение в случае ядерной тревоги проходило как можно эффективнее,
необходимо для каждого селения определить ближайшее к нему бомбоубежище.
Формат ввода - В первой строке вводится число n - количество селений
(1 <= n <= 100000). Вторая строка содержит n различных целых чисел,
i-е из этих чисел задает расстояние от начала дороги до i-го селения.
В третьей строке входных данных задается число m - количество бомбоубежищ
(1 <= m <= 100000). Четвертая строка содержит m различных целых чисел,
i-е из этих чисел задает расстояние от начала дороги до i-го бомбоубежища.
Все расстояния положительны и не превышают 10⁹. Селение и убежище могут
располагаться в одной точке.
Формат вывода - Выведите n чисел - для каждого селения выведите номер
ближайшего к нему бомбоубежища. Бомбоубежища пронумерованы от 1 до m в том
порядке, в котором они заданы во входных данных.
Указание - Создайте список кортежей из пар (позиция селения, его номер в
исходном списке), а также аналогичный список для бомбоубежищ. Отсортируйте
эти списки.
Перебирайте селения в порядке возрастания.
Для селения ближайшими могут быть два соседних бомбоубежища, среди них надо
выбрать ближайшее. При переходе к следующему селению не обязательно искать
ближайшее бомбоубежище с самого начала. Его можно искать начиная с позиции,
найденной для предыдущего города. Аналогично, не нужно искать подходящее
бомбоубежище до конца списка бомбоубежищ: достаточно найти самое близкое.
Если Вы неэффективно реализуете эту часть, то решение тесты не пройдет.
Для хранения ответа используйте список, где индекс будет номером селения,
а по этому индексу будет запоминаться номер бомбоубежища.
"""

n_place = int(input())  # переменная для количества селений
placeList = sorted(enumerate(map(int, input().split())), key=lambda x: x[1])
m_shelter = int(input())  # переменная для количества бомбоубежищ
shelterList = sorted(enumerate(map(int, input().split())), key=lambda x: x[1])

placeList.sort(key=lambda x: x[1])  # сортировка селений по растоянию
shelterList.sort(key=lambda x: x[1])  # сортировка бомбоубежищ по растоянию
shelterList.append((-1, 10 ** 10))  # дописывание очень удаленного бомб-ща

datePlaces_and_Shelters = [None] * n_place  # формирование пустого массива

if m_shelter == 1:  # если бомбоубежище одно, то пишем его для всех селений
    [print(1) for i in placeList]
else:
    j = 0
    for i in range(n_place):
        tempDistance = abs(shelterList[j][1] - placeList[i][1])
        distToNextShelter = abs(shelterList[j + 1][1] - placeList[i][1])
        while tempDistance > distToNextShelter:
            tempDistance = distToNextShelter
            j += 1
            distToNextShelter = abs(shelterList[j + 1][1] - placeList[i][1])

        datePlaces_and_Shelters[placeList[i][0]] = shelterList[j][0] + 1
    print(*datePlaces_and_Shelters)
